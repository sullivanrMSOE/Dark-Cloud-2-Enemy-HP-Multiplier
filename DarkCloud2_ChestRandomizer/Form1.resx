<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>